{"version":3,"file":"component---src-templates-post-js-4179e6d5ac935f8c0caa.js","mappings":"6IAEe,SAASA,IAEpB,OACIC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGC,KAAK,KAAI,OACZD,EAAAA,cAAAA,OAAAA,CAAME,MAAO,CAACC,SAAU,QAASC,WAAY,SACxC,IACDJ,EAAAA,cAAAA,IAAAA,CAAGC,KAAK,kCAAiC,4BAIzD,C,0ICVO,MAAMI,EAAkB,KAChBC,EAAAA,EAAAA,gBAAe,cAahBC,KAAKC,aCdiC,IAI9CC,EAAY,8DAqBf,OArBe,wBAEhBC,OAAA,WAEE,OACE,gCACE,4BACE,gBAACX,EAAA,EAAG,MACJ,0BAAKY,KAAKC,MAAMC,KAAKC,eAAeC,YAAYC,MAAM,KACtD,uBAAKd,MAAO,CAAC,SAAY,SAAUe,UAAW,QAASC,aAAc,MACnEC,SAAU,MAAOf,WAAY,SAC5BO,KAAKC,MAAMC,KAAKC,eAAeC,YAAYK,KAC5C,2BACCT,KAAKC,MAAMC,KAAKC,eAAeC,YAAYM,aAE9C,uBACEC,wBAAyB,CAAEC,OAAQZ,KAAKC,MAAMC,KAAKC,eAAeU,SAK5E,EAAC,EArBe,CAASxB,EAAAA,WAyBpB,SAASyB,EAAK,GAAU,IAAV,KAAEZ,GAAK,EAC1B,MAAMa,EAAWrB,IACXsB,EAAQd,EAAKC,eAAeC,YAAYC,OAASU,EAASV,MAC1DK,EAAcR,EAAKC,eAAeC,YAAYM,aAAeK,EAASL,YACtEO,GAAYf,EAAKC,eAAeC,YAAYc,MAAQ,IAAIC,KAAK,MAAMC,QAAQ,KAAM,IACjFC,EAAK,GAAMN,EAASO,SAAUpB,EAAKC,eAAeC,YAAYiB,OAASN,EAASM,OACtF,OACE,gCACE,6BAAQL,GACR,wBAAMO,SAAS,WAAWC,QAASR,IAEnC,wBAAMS,KAAK,cAAcD,QAASd,IAClC,wBAAMa,SAAS,iBAAiBC,QAASd,IAEzC,wBAAMe,KAAK,WAAWD,QAASP,IAC/B,wBAAMM,SAAS,WAAWC,QAASH,IAGzC,CAEA,O","sources":["webpack://new/./src/Nav.tsx","webpack://new/./src/useSiteMetadata.ts","webpack://new/./src/templates/post.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Nav() {\n\n    return(\n        <nav>\n            <a href=\"/\">Jay</a>\n            <span style={{fontSize: \"small\", marginLeft: \"10px\"}}>\n                {' '}\n                <a href=\"mailto:jayonthegreen@gmail.com\">jayonthegreen@gmail.com</a>\n            </span>\n        </nav>\n    )\n}","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n// This is a custom hook that uses the useStaticQuery hook to fetch site metadata from the GraphQL API.","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Nav from '../Nav'\nimport { useSiteMetadata } from '../useSiteMetadata'\n\n\n\nclass PostTemplate extends React.Component {\n  \n  render() {\n\n    return (\n      <>\n        <main>\n          <Nav/>\n          <h1>{this.props.data.markdownRemark.frontmatter.title} </h1>\n          <div style={{'fontSize': 'medium', textAlign: 'right', marginBottom: '1em', \n            maxWidth: '60%', marginLeft: 'auto'}}>\n            {this.props.data.markdownRemark.frontmatter.date}\n            <br/>\n            {this.props.data.markdownRemark.frontmatter.description} \n          </div>\n          <div\n            dangerouslySetInnerHTML={{ __html: this.props.data.markdownRemark.html }}\n          />\n        </main>\n      </>\n    )\n  }\n\n}\n\nexport function Head({ data}) {\n  const sitemeta = useSiteMetadata();\n  const tilte = data.markdownRemark.frontmatter.title || sitemeta.title\n  const description = data.markdownRemark.frontmatter.description || sitemeta.description\n  const keywords = (data.markdownRemark.frontmatter.tags || []).join(', ').replace(/#/g, '')\n  const image = `${sitemeta.siteUrl}${data.markdownRemark.frontmatter.image || sitemeta.image}`\n  return (\n    <>\n      <title>{tilte}</title>\n      <meta property=\"og:title\" content={tilte} />\n\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:description\" content={description} />\n\n      <meta name=\"keywords\" content={keywords} />\n      <meta property=\"og:image\" content={image} />\n    </>\n  )\n}\n\nexport default PostTemplate\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n        image\n      }\n    }\n  }\n`\n"],"names":["Nav","React","href","style","fontSize","marginLeft","useSiteMetadata","useStaticQuery","site","siteMetadata","PostTemplate","render","this","props","data","markdownRemark","frontmatter","title","textAlign","marginBottom","maxWidth","date","description","dangerouslySetInnerHTML","__html","html","Head","sitemeta","tilte","keywords","tags","join","replace","image","siteUrl","property","content","name"],"sourceRoot":""}