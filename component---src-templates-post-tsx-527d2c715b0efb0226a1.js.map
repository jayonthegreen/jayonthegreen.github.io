{"version":3,"file":"component---src-templates-post-tsx-527d2c715b0efb0226a1.js","mappings":"6IAEe,SAASA,IAEpB,OACIC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGC,KAAK,KAAI,OACZD,EAAAA,cAAAA,OAAAA,CAAME,MAAO,CAACC,SAAU,QAASC,WAAY,SACxC,IACDJ,EAAAA,cAAAA,IAAAA,CAAGC,KAAK,kCAAiC,4BAIzD,C,0ICVO,MAAMI,EAAkB,KAChBC,EAAAA,EAAAA,gBAAe,cAahBC,KAAKC,aCdiC,IAsB9CC,EAAY,8DA+Bf,OA/BeC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,YAChBC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,OAChB,MAAEC,EAAK,KAAEC,EAAI,YAAEC,GAAgBL,EAAKM,eAAeC,YAEzD,OACEnB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACD,EAAAA,EAAG,MACJC,EAAAA,cAAAA,KAAAA,KAAKe,GACLf,EAAAA,cAAAA,MAAAA,CACEE,MAAO,CACLC,SAAU,SACViB,UAAW,QACXC,aAAc,MACdC,SAAU,MACVlB,WAAY,SAGbY,EACDhB,EAAAA,cAAAA,KAAAA,MACCiB,GAEHjB,EAAAA,cAAAA,MAAAA,CACEuB,wBAAyB,CACvBC,OAAQZ,EAAKM,eAAeO,SAMxC,EAAC,EA/Be,CAASzB,EAAAA,WAkCpB,SAAS0B,EAAK,GAAwC,IAAxC,KAAEd,GAAoC,EACzD,MAAMe,EAAWtB,IACXuB,EAAQhB,EAAKM,eAAeC,YAE5BJ,EAAQa,EAAMb,OAASY,EAASZ,MAChCE,EAAcW,EAAMX,aAAeU,EAASV,YAC5CY,GAAYD,EAAME,MAAQ,IAAIC,KAAK,MAAMC,QAAQ,KAAM,IACvDC,EAAQ,GAAGN,EAASO,SAAUN,EAAMK,OAASN,EAASM,OAE5D,OACEjC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQe,GACRf,EAAAA,cAAAA,OAAAA,CAAMmC,SAAS,WAAWC,QAASrB,IACnCf,EAAAA,cAAAA,OAAAA,CAAMqC,KAAK,cAAcD,QAASnB,IAClCjB,EAAAA,cAAAA,OAAAA,CAAMmC,SAAS,iBAAiBC,QAASnB,IACzCjB,EAAAA,cAAAA,OAAAA,CAAMqC,KAAK,WAAWD,QAASP,IAC/B7B,EAAAA,cAAAA,OAAAA,CAAMmC,SAAS,WAAWC,QAASH,IAGzC,CAEA,O","sources":["webpack://new/./src/Nav.tsx","webpack://new/./src/useSiteMetadata.ts","webpack://new/./src/templates/post.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Nav() {\n\n    return(\n        <nav>\n            <a href=\"/\">Jay</a>\n            <span style={{fontSize: \"small\", marginLeft: \"10px\"}}>\n                {' '}\n                <a href=\"mailto:jayonthegreen@gmail.com\">jayonthegreen@gmail.com</a>\n            </span>\n        </nav>\n    )\n}","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n// This is a custom hook that uses the useStaticQuery hook to fetch site metadata from the GraphQL API.","import React from 'react'\nimport { graphql, PageProps, HeadProps } from 'gatsby'\nimport Nav from '../Nav'\nimport { useSiteMetadata } from '../useSiteMetadata'\n\ntype Frontmatter = {\n  title: string\n  date: string\n  description?: string\n  tags?: string[]\n  image?: string\n}\n\ntype MarkdownRemark = {\n  html: string\n  fields: {\n    slug: string\n  }\n  frontmatter: Frontmatter\n}\n\ntype BlogPostQueryData = {\n  markdownRemark: MarkdownRemark\n}\n\nclass PostTemplate extends React.Component<PageProps<BlogPostQueryData>> {\n  render() {\n    const { data } = this.props\n    const { title, date, description } = data.markdownRemark.frontmatter\n\n    return (\n      <>\n        <main>\n          <Nav />\n          <h1>{title}</h1>\n          <div\n            style={{\n              fontSize: 'medium',\n              textAlign: 'right',\n              marginBottom: '1em',\n              maxWidth: '60%',\n              marginLeft: 'auto',\n            }}\n          >\n            {date}\n            <br />\n            {description}\n          </div>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: data.markdownRemark.html,\n            }}\n          />\n        </main>\n      </>\n    )\n  }\n}\n\nexport function Head({ data }: HeadProps<BlogPostQueryData>) {\n  const sitemeta = useSiteMetadata()\n  const front = data.markdownRemark.frontmatter\n\n  const title = front.title || sitemeta.title\n  const description = front.description || sitemeta.description\n  const keywords = (front.tags || []).join(', ').replace(/#/g, '')\n  const image = `${sitemeta.siteUrl}${front.image || sitemeta.image}`\n\n  return (\n    <>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta property=\"og:image\" content={image} />\n    </>\n  )\n}\n\nexport default PostTemplate\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n        image\n      }\n    }\n  }\n`"],"names":["Nav","React","href","style","fontSize","marginLeft","useSiteMetadata","useStaticQuery","site","siteMetadata","PostTemplate","_inheritsLoose","render","data","this","props","title","date","description","markdownRemark","frontmatter","textAlign","marginBottom","maxWidth","dangerouslySetInnerHTML","__html","html","Head","sitemeta","front","keywords","tags","join","replace","image","siteUrl","property","content","name"],"sourceRoot":""}